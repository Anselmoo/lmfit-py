
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/documentation/parameters_basic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_documentation_parameters_basic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_documentation_parameters_basic.py:


doc_parameters_basic.py
=======================

.. GENERATED FROM PYTHON SOURCE LINES 7-55



.. image:: /examples/documentation/images/sphx_glr_parameters_basic_001.png
    :alt: parameters basic
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [[Fit Statistics]]
        # fitting method   = leastsq
        # function evals   = 64
        # data points      = 301
        # variables        = 4
        chi-square         = 11.0484618
        reduced chi-square = 0.03720021
        Akaike info crit   = -986.750534
        Bayesian info crit = -971.922093
    [[Variables]]
        amp:    4.96078856 +/- 0.03791272 (0.76%) (init = 10)
        decay:  0.02437789 +/- 4.2572e-04 (1.75%) (init = 0.1)
        shift: -0.10363212 +/- 0.00981677 (9.47%) (init = 0)
        omega:  2.00019266 +/- 0.00309578 (0.15%) (init = 3)
    [[Correlations]] (unreported correlations are < 0.100)
        C(shift, omega) = -0.785
        C(amp, decay)   =  0.584
        C(amp, shift)   = -0.117






|

.. code-block:: default

    # <examples/doc_parameters_basic.py>
    import numpy as np

    from lmfit import Minimizer, Parameters, report_fit

    # create data to be fitted
    x = np.linspace(0, 15, 301)
    data = (5.0 * np.sin(2.0*x - 0.1) * np.exp(-x*x*0.025) +
            np.random.normal(size=x.size, scale=0.2))


    # define objective function: returns the array to be minimized
    def fcn2min(params, x, data):
        """Model a decaying sine wave and subtract data."""
        amp = params['amp']
        shift = params['shift']
        omega = params['omega']
        decay = params['decay']
        model = amp * np.sin(x*omega + shift) * np.exp(-x*x*decay)
        return model - data


    # create a set of Parameters
    params = Parameters()
    params.add('amp', value=10, min=0)
    params.add('decay', value=0.1)
    params.add('shift', value=0.0, min=-np.pi/2., max=np.pi/2.)
    params.add('omega', value=3.0)

    # do fit, here with the default leastsq algorithm
    minner = Minimizer(fcn2min, params, fcn_args=(x, data))
    result = minner.minimize()

    # calculate final result
    final = data + result.residual

    # write error report
    report_fit(result)

    # try to plot results
    try:
        import matplotlib.pyplot as plt
        plt.plot(x, data, 'k+')
        plt.plot(x, final, 'r')
        plt.show()
    except ImportError:
        pass
    # <end of examples/doc_parameters_basic.py>


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.175 seconds)


.. _sphx_glr_download_examples_documentation_parameters_basic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: parameters_basic.py <parameters_basic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: parameters_basic.ipynb <parameters_basic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
